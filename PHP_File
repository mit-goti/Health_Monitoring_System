<?php

    if (!empty($_GET['latitude']) && !empty($_GET['longitude'])&&!empty($_GET['time'])) {

        function getParameter($par, $default = null){
            if (isset($_GET[$par]) && strlen($_GET[$par])) return $_GET[$par];
            elseif (isset($_POST[$par]) && strlen($_POST[$par])) 
              return $_POST[$par];
            else return $default;
        }

        $file = 'gps.txt';
        $lat = getParameter("latitude");
        $lon = getParameter("longitude");
        $tm = getParameter("time");
        $person = $lat.",".$lon.",".$tm."\n";
        
         echo "
            DATA:\n
            Latitude: ".$lat."\n
            Longitude: ".$lon;        
          if($lat==2&&$lon==2&&$tm==2)
          file_put_contents("gps.txt","");
        else if (!file_put_contents($file, $person, FILE_APPEND | LOCK_EX))
            echo "\n\t Error saving Data\n";
        else echo "\n\t Data Save\n";
    }
    else {

?>

<!DOCTYPE html>
<html>
  <head>
    <title>GPS</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Info windows</title>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
    <script>
      var map;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 16,
          center: new google.maps.LatLng(23.187472,72.627253),
          mapTypeId: 'roadmap'
        });

        var iconBase = 'https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/64/Map-Marker-Flag--Left-Pink.png';
       var iconBase2 ='https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/64/Map-Marker-Flag--Left-Chartreuse.png';
       var iconBase3 ='https://cdn1.iconfinder.com/data/icons/Map-Markers-Icons-Demo-PNG/64/Map-Marker-Flag--Left-Azure.png';
        var icons = {
          blue: {
            icon: iconBase3
          },
          green: {
            icon: iconBase2
          },
          info: {
            icon: iconBase 
          }
        };

       var features = [];
       var contentString = [];
           function readStringFromFileAtPath(pathOfFileToReadFrom)
        {
            var request = new XMLHttpRequest();
            request.open("GET", pathOfFileToReadFrom,false);
            request.send(null);
            var returnValue = request.responseText;

            return returnValue;
        }


        function displayContents() {
            var text = readStringFromFileAtPath ( 'https://geolocationtracker.000webhostapp.com/gps.txt' );
            var lines = text.split("\n");
            for (var i=0;i<lines.length;i++) {
                    console.log(lines[i]);
                    var words=lines[i].split(",");
                    if ((words[0]!="")&&(words[1]!="")&&(words[2]!=""))
                    {
                        var j=i+1;
                        var t4=words[2][12]+''+words[2][13];
                        var t=words[2][10]+''+words[2][11];
                        t=parseInt(t)+30;
                        var t2=parseInt(t)/60;
                        t=parseInt(t)%60; 
                        var t3=words[2][8]+''+words[2][9];
                        t3=parseInt(t3)+5+parseInt(t2);
                        t3=t3%24;
                        contentString[i]=j+"<br>"+words[2][6]+''+words[2][7]+'/'+words[2][4]+''+words[2][5]+'/'+words[2][0]+''+words[2][1]+words[2][2]+''+words[2][3]+"<br>"+t3+':'+t+':'+t4;
                          if(i==0)
                          {
                                 if(i==0)
                                {  
                                 features[i]={
                                  position: new google.maps.LatLng(words[0],words[1]),
                                 type: 'green',
                                 index: i,
                                 contents: contentString[i]
                                };
                                 }
                          }
                          else if(i==(lines.length-2))
                           {
                                           features[i]={
                            position: new google.maps.LatLng(words[0],words[1]),
                            type: 'blue',
                            index: i,
                            contents: contentString[i]
                             }; 
                                 }
                          else
                          {
                                                features[i]={
                            position: new google.maps.LatLng(words[0],words[1]),
                            type: 'info',
                            index: i,
                            contents: contentString[i]
                             };
                           }
                       
                        map.setCenter(new google.maps.LatLng(words[0],words[1]));
                    }
                }
            }
       displayContents();
        // Create markers.
      

        
        features.forEach(function(feature) {
          var marker = new google.maps.Marker({
            position: feature.position,
            icon: icons[feature.type].icon,
            map: map
          });
           var infowindow = new google.maps.InfoWindow({
                 content: feature.contents
           });
           marker.addListener('click', function() {
                  infowindow.open(map, marker);
           });
        });
      }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCQKVpf96qC0adBGwWKekrV6JT0hjV7Awc&callback=initMap">
    </script>
  </body>

</html>
<?php } ?>
